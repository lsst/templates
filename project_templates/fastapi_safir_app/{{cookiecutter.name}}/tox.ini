[tox]
envlist = py,coverage-report,typing,lint
isolated_build = True
{%- if cookiecutter.flavor == "UWS" %}

[docker:postgres]
image = postgres:latest
environment =
    POSTGRES_PASSWORD=INSECURE-PASSWORD
    POSTGRES_USER={{ cookiecutter.name }}
    POSTGRES_DB={{ cookiecutter.name }}
# The healthcheck ensures that tox-docker won't run tests until the
# container is up and the command finishes with exit code 0 (success)
healthcheck_cmd = PGPASSWORD=$POSTGRES_PASSWORD psql \
    --user=$POSTGRES_USER --dbname=$POSTGRES_DB \
    --host=127.0.0.1 --quiet --no-align --tuples-only \
    -1 --command="SELECT 1"
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1
{%- endif %}

[testenv]
description = Run pytest against {envname}.
deps =
    -r{toxinidir}/requirements/main.txt
    -r{toxinidir}/requirements/dev.txt
commands =
    pytest --cov={{ cookiecutter.module_name }} --cov-branch --cov-report= {posargs}

[testenv:coverage-report]
description = Compile coverage from each test run.
skip_install = true
deps = coverage[toml]>=5.0.2
depends =
    py
commands = coverage report
{%- if cookiecutter.flavor == "UWS" %}

[testenv:py]
docker =
    postgres
setenv =
    {{ cookiecutter.name | upper | replace('-', '_') }}_DATABASE_URL = postgresql://{{cookiecutter.name}}@localhost/{{cookiecutter.name}}
    {{ cookiecutter.name | upper | replace('-', '_') }}_DATABASE_PASSWORD = INSECURE-PASSWORD
    {{ cookiecutter.name | upper | replace('-', '_') }}_ARQ_QUEUE_URL = redis://localhost/0
    {{ cookiecutter.name | upper | replace('-', '_') }}_SERVICE_ACCOUNT = {{cookiecutter.name}}@example.com
    {{ cookiecutter.name | upper | replace('-', '_') }}_STORAGE_URL = gs://some-bucket
{%- endif %}

[testenv:typing]
description = Run mypy.
commands =
    mypy src/{{ cookiecutter.module_name }} tests

[testenv:lint]
description = Lint codebase by running pre-commit
skip_install = true
deps =
    pre-commit
commands = pre-commit run --all-files

[testenv:run]
description = Run the development server with auto-reload for code changes.
usedevelop = true
commands = uvicorn {{ cookiecutter.module_name }}.main:app --reload
