name: CI

"on":
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - "dependabot/**"
      - "renovate/**"
      - "tickets/**"
      - "u/**"
    tags:
      - "*"
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python:
          - 3.8
          - 3.9

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: {{ "${{ matrix.python }}" }}

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.3

      - name: Install tox
        run: pip install tox

      - name: Cache tox environments
        id: cache-tox
        uses: actions/cache@v2
        with:
          path: .tox
          # requirements/*.txt and pyproject.toml have versioning info
          # that would impact the tox environment.
          key: {{ "tox-${{ matrix.python }}-${{ hashFiles('requirements/*.txt') }}-${{ hashFiles('pyproject.toml') }}" }}
          restore-keys: |
            {{ "tox-${{ matrix.python }}-${{ hashFiles('requirements/*.txt') }}-" }}

      - name: Run tox
        run: tox -e py,coverage-report,typing

  build:
    runs-on: ubuntu-latest
    needs: [test]

    # Only do Docker builds of tagged releases and pull requests from ticket
    # branches.  This will still trigger on pull requests from untrusted
    # repositories whose branch names match our tickets/* branch convention,
    # but in this case the build will fail with an error since the secret
    # won't be set.
    if: >
      startsWith(github.ref, 'refs/tags/')
      || startsWith(github.head_ref, 'tickets/')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Define the Docker tag
        id: vars
        run: echo ::set-output name=tag::$(scripts/docker-tag.sh "$GITHUB_REF")

      - name: Print the tag
        id: print
        run: echo {{ "${{ steps.vars.outputs.tag }}" }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: {{ "${{ runner.os }}" }}-buildx-{{ "${{ github.sha }}" }}
          restore-keys:
            {{ "${{ runner.os }}" }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: {{ "${{ secrets.DOCKER_USERNAME }}" }}
          password: {{ "${{ secrets.DOCKER_TOKEN }}" }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: lsstsqre/{{ cookiecutter.package_name }}:{{ "${{ steps.vars.outputs.tag }}" }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
