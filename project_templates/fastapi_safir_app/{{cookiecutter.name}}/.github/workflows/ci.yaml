name: CI

"on":
  merge_group: {}
  pull_request: {}
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - "dependabot/**"
      - "gh-readonly-queue/**"
      - "renovate/**"
      - "tickets/**"
      - "u/**"
    tags:
      - "*"

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python:
          - "3.11"

    steps:
      - uses: actions/checkout@v3

      - name: Run tox
        uses: lsst-sqre/run-tox@v1
        with:
          python-version: {{ "${{ matrix.python }}" }}
          tox-envs: "py,coverage-report,typing"

  build:

    runs-on: ubuntu-latest
    needs: [lint, test]

    # Only do Docker builds of tagged releases and pull requests from ticket
    # branches.  This will still trigger on pull requests from untrusted
    # repositories whose branch names match our tickets/* branch convention,
    # but in this case the build will fail with an error since the secret
    # won't be set.
    if: >
      github.event_name != 'merge_group'
      && (startsWith(github.ref, 'refs/tags/')
          || startsWith(github.head_ref, 'tickets/'))

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Define the Docker tag
        id: vars
        run: echo ::set-output name=tag::$(scripts/docker-tag.sh)

      - name: Print the tag
        id: print
        run: echo {{ "${{ steps.vars.outputs.tag }}" }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: {{ "${{ github.repository_owner }}" }}
          password: {{ "${{ secrets.GITHUB_TOKEN }}" }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/lsst-sqre/{{ cookiecutter.name | lower }}:{{ "${{ steps.vars.outputs.tag }}" }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
